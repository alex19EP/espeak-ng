set(ESPEAK_CONFIG_DIR ${CMAKE_CURRENT_BINARY_DIR}/include)
set(ESPEAK_CONFIG_H ${ESPEAK_CONFIG_DIR}/config.h)
configure_file(config.h.in ${ESPEAK_CONFIG_H})

add_library(libespeak-ng-config INTERFACE)
target_include_directories(libespeak-ng-config INTERFACE ${ESPEAK_CONFIG_DIR})

add_library(libespeak-ng
  common.c
  mnemonics.c
  error.c
  ieee80.c

  compiledata.c
  compiledict.c

  dictionary.c
  encoding.c
  intonation.c
  langopts.c
  numbers.c
  phoneme.c
  phonemelist.c
  readclause.c
  setlengths.c
  soundicon.c
  spect.c
  ssml.c
  synthdata.c
  synthesize.c
  tr_languages.c
  translate.c
  translateword.c
  voices.c
  wavegen.c
  speech.c

  espeak_api.c
)

target_compile_options(libespeak-ng PRIVATE
  "-fwrapv"
  "-Wunused-parameter"
  "-Wunused"
  "-Wuninitialized"
  "-Wreturn-type"
  "-Wmissing-prototypes"
  "-Wint-conversion"
  "-Wimplicit"
)

if (USE_ASYNC)
  target_sources(libespeak-ng PRIVATE
    event.c
    fifo.c
    espeak_command.c
  )
endif(USE_ASYNC)

if (USE_MBROLA)
  target_sources(libespeak-ng PRIVATE
    mbrowrap.c
    compilembrola.c
    synth_mbrola.c
  )
endif(USE_MBROLA)

if (USE_KLATT)
  target_sources(libespeak-ng PRIVATE klatt.c)
endif(USE_KLATT)

if (USE_SPEECHPLAYER)
  target_sources(libespeak-ng PRIVATE sPlayer.c)
  target_link_libraries(libespeak-ng PRIVATE speechPlayer)
endif(USE_SPEECHPLAYER)

if (HAVE_LIBSONIC AND USE_LIBSONIC)
  target_link_libraries(libespeak-ng PRIVATE ${SONIC_LIB})
  target_include_directories(libespeak-ng PRIVATE ${SONIC_INC})
endif()

if (HAVE_LIBPCAUDIO AND USE_LIBPCAUDIO)
  target_link_libraries(libespeak-ng PRIVATE ${PCAUDIO_LIB})
  target_include_directories(libespeak-ng PRIVATE ${PCAUDIO_INC})
endif()

target_link_libraries(libespeak-ng PRIVATE libespeak-ng-config ucd m)
target_include_directories(libespeak-ng PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/include/compat)
target_include_directories(libespeak-ng PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/include)
